{"ast":null,"code":"/* determine winner */\nexport default function (squares) {\n  var winMatrix = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]]; // get X's array\n\n  var xArray = [];\n  squares.map(function (value, index) {\n    if (value === \"X\") {\n      xArray.push(index);\n    }\n\n    return 0;\n  }); // console.log(\"xArray: \" + xArray);\n\n  /* get O's array */\n\n  var oArray = [];\n  squares.map(function (value, index) {\n    if (value === \"O\") {\n      oArray.push(index);\n    }\n\n    return 0;\n  }); // console.log(\"oArray: \" + oArray);\n\n  /* determine if X wins */\n\n  var resultX = winMatrix.find(function (subArray) {\n    return subArray.every(function (i) {\n      return xArray.includes(i);\n    });\n  });\n\n  if (resultX) {\n    // alert(\"X win! \" + resultX);\n    return \"X\";\n  } // determine if O wins\n\n\n  var resultO = winMatrix.find(function (subArray) {\n    return subArray.every(function (i) {\n      return oArray.includes(i);\n    });\n  });\n\n  if (resultO) {\n    // alert(\"X win! \" + resultX);\n    return \"O\";\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/Users/Jun/Documents/FE/tic-tac-toe/tic-tac-toe/src/determineWinner.js"],"names":["squares","winMatrix","xArray","map","value","index","push","oArray","resultX","find","subArray","every","i","includes","resultO"],"mappings":"AAAA;AACA,eAAe,UAASA,OAAT,EAAkB;AAC/B,MAAMC,SAAS,GAAG,CAChB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADgB,EAEhB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFgB,EAGhB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHgB,EAIhB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJgB,EAKhB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALgB,EAMhB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANgB,EAOhB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPgB,EAQhB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARgB,CAAlB,CAD+B,CAW/B;;AACA,MAAMC,MAAM,GAAG,EAAf;AACAF,EAAAA,OAAO,CAACG,GAAR,CAAY,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAC5B,QAAID,KAAK,KAAK,GAAd,EAAmB;AACjBF,MAAAA,MAAM,CAACI,IAAP,CAAYD,KAAZ;AACD;;AACD,WAAO,CAAP;AACD,GALD,EAb+B,CAmB/B;;AACA;;AACA,MAAME,MAAM,GAAG,EAAf;AACAP,EAAAA,OAAO,CAACG,GAAR,CAAY,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAC5B,QAAID,KAAK,KAAK,GAAd,EAAmB;AACjBG,MAAAA,MAAM,CAACD,IAAP,CAAYD,KAAZ;AACD;;AACD,WAAO,CAAP;AACD,GALD,EAtB+B,CA4B/B;;AACA;;AACA,MAAMG,OAAO,GAAGP,SAAS,CAACQ,IAAV,CAAe,UAAAC,QAAQ,EAAI;AACzC,WAAOA,QAAQ,CAACC,KAAT,CAAe,UAAAC,CAAC,EAAI;AACzB,aAAOV,MAAM,CAACW,QAAP,CAAgBD,CAAhB,CAAP;AACD,KAFM,CAAP;AAGD,GAJe,CAAhB;;AAKA,MAAIJ,OAAJ,EAAa;AACX;AACA,WAAO,GAAP;AACD,GAtC8B,CAuC/B;;;AACA,MAAMM,OAAO,GAAGb,SAAS,CAACQ,IAAV,CAAe,UAAAC,QAAQ,EAAI;AACzC,WAAOA,QAAQ,CAACC,KAAT,CAAe,UAAAC,CAAC,EAAI;AACzB,aAAOL,MAAM,CAACM,QAAP,CAAgBD,CAAhB,CAAP;AACD,KAFM,CAAP;AAGD,GAJe,CAAhB;;AAKA,MAAIE,OAAJ,EAAa;AACX;AACA,WAAO,GAAP;AACD;;AACD,SAAO,IAAP;AACD","sourcesContent":["/* determine winner */\nexport default function(squares) {\n  const winMatrix = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  // get X's array\n  const xArray = [];\n  squares.map((value, index) => {\n    if (value === \"X\") {\n      xArray.push(index);\n    }\n    return 0;\n  });\n  // console.log(\"xArray: \" + xArray);\n  /* get O's array */\n  const oArray = [];\n  squares.map((value, index) => {\n    if (value === \"O\") {\n      oArray.push(index);\n    }\n    return 0;\n  });\n  // console.log(\"oArray: \" + oArray);\n  /* determine if X wins */\n  const resultX = winMatrix.find(subArray => {\n    return subArray.every(i => {\n      return xArray.includes(i);\n    });\n  });\n  if (resultX) {\n    // alert(\"X win! \" + resultX);\n    return \"X\";\n  }\n  // determine if O wins\n  const resultO = winMatrix.find(subArray => {\n    return subArray.every(i => {\n      return oArray.includes(i);\n    });\n  });\n  if (resultO) {\n    // alert(\"X win! \" + resultX);\n    return \"O\";\n  }\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}