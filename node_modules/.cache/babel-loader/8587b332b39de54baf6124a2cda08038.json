{"ast":null,"code":"import _assertThisInitialized from \"/Users/Jun/Documents/FE/tic-tac-toe/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"/Users/Jun/Documents/FE/tic-tac-toe/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Jun/Documents/FE/tic-tac-toe/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Jun/Documents/FE/tic-tac-toe/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Jun/Documents/FE/tic-tac-toe/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Jun/Documents/FE/tic-tac-toe/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Jun/Documents/FE/tic-tac-toe/tic-tac-toe/src/index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nvar Square =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Square, _Component);\n\n  function Square() {\n    _classCallCheck(this, Square);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Square).apply(this, arguments));\n  }\n\n  _createClass(Square, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"button\", {\n        className: \"square squareID-\" + this.props.squareId // onClick={() => {\n        //   this.props.onClick();\n        // }}\n        ,\n        onClick: this.props.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, this.props.value);\n    }\n  }]);\n\n  return Square;\n}(Component); // function Square(props) {\n//   return (\n//     <button className=\"square\" onClick={props.onClick}>\n//       {props.value}\n//     </button>\n//   );\n// }\n\n\nvar Board =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Board, _Component2);\n\n  function Board(props) {\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n    _this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true,\n      isGameOver: false\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this))); //this function is modifying the state\n\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      // const winner = determineWinner(this.state.squares);\n      // if (this.state.isGameOver) {\n      //   alert(\"Winner: \" + winner + \"!\");\n      // }\n      // console.log(\"winner: \" + winner);\n      console.log(\"squares: \" + this.state.squares);\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(event) {\n      //\n      var className = event.target.className;\n      var i = className.slice(className.indexOf(\"squareID-\") + 9); //\n\n      var squares = this.state.squares.slice();\n      /* determine if the square was already filled */\n\n      if (this.state.isGameOver) {\n        alert(\"Game over\");\n      } else if (squares[i] === null) {\n        /* determine who is next */\n        squares[i] = this.state.xIsNext ? \"X\" : \"O\"; // console.log(determineWinner(squares));\n\n        this.setState({\n          squares: squares,\n          xIsNext: !this.state.xIsNext,\n          isGameOver: determineWinner(squares)\n        });\n      } else {\n        alert(\"this spot was filled already\");\n      }\n\n      console.log(\"GameOver?: \" + Boolean(this.state.isGameOver));\n    }\n  }, {\n    key: \"renderSquare\",\n    value: function renderSquare(i) {\n      return React.createElement(Square, {\n        squareId: i,\n        value: this.state.squares[i] // onClick={this.handleClick}\n        // onClick={() => {\n        //   this.handleClick(i);\n        // }} // every time\n        ,\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var next = this.state.xIsNext ? \"X\" : \"O\";\n      var status = \"Next player: \" + next; // check if there is a winner, if so change status\n\n      var result = determineWinner(this.state.squares);\n\n      if (result) {\n        status = \"Winner: \" + result;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, status), [0, 1, 2].map(function (d, index) {\n        return React.createElement(\"div\", {\n          className: \"board-row\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, _this2.renderSquare(index * 3), _this2.renderSquare(index * 3 + 1), _this2.renderSquare(index * 3 + 2));\n      }));\n    }\n  }]);\n\n  return Board;\n}(Component);\n\nvar Game =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(Game, _Component3);\n\n  function Game() {\n    _classCallCheck(this, Game);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Game).apply(this, arguments));\n  }\n\n  _createClass(Game, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Board, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"game-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Game;\n}(Component);\n/* determine winner */\n\n\nfunction determineWinner(squares) {\n  var winMatrix = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]]; // get X's array\n\n  var xArray = [];\n  squares.map(function (value, index) {\n    if (value === \"X\") {\n      xArray.push(index);\n    }\n\n    return 0;\n  }); // console.log(\"xArray: \" + xArray);\n\n  /* get O's array */\n\n  var oArray = [];\n  squares.map(function (value, index) {\n    if (value === \"O\") {\n      oArray.push(index);\n    }\n\n    return 0;\n  }); // console.log(\"oArray: \" + oArray);\n\n  /* determine if X wins */\n\n  var resultX = winMatrix.find(function (subArray) {\n    return subArray.every(function (i) {\n      return xArray.includes(i);\n    });\n  });\n\n  if (resultX) {\n    // alert(\"X win! \" + resultX);\n    return \"X\";\n  } // determine if O wins\n\n\n  var resultO = winMatrix.find(function (subArray) {\n    return subArray.every(function (i) {\n      return oArray.includes(i);\n    });\n  });\n\n  if (resultO) {\n    // alert(\"X win! \" + resultX);\n    return \"O\";\n  }\n\n  return null;\n} // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 185\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/Jun/Documents/FE/tic-tac-toe/tic-tac-toe/src/index.js"],"names":["React","Component","ReactDOM","Square","props","squareId","onClick","value","Board","state","squares","Array","fill","xIsNext","isGameOver","handleClick","bind","console","log","event","className","target","i","slice","indexOf","alert","setState","determineWinner","Boolean","next","status","result","map","d","index","renderSquare","Game","winMatrix","xArray","push","oArray","resultX","find","subArray","every","includes","resultO","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nclass Square extends Component {\n  render() {\n    return (\n      <button\n        className={\"square squareID-\" + this.props.squareId}\n        // onClick={() => {\n        //   this.props.onClick();\n        // }}\n        onClick={this.props.onClick}\n      >\n        {this.props.value}\n      </button>\n    );\n  }\n}\n\n// function Square(props) {\n//   return (\n//     <button className=\"square\" onClick={props.onClick}>\n//       {props.value}\n//     </button>\n//   );\n// }\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true,\n      isGameOver: false\n    };\n    this.handleClick = this.handleClick.bind(this); //this function is modifying the state\n  }\n\n  componentDidUpdate() {\n    // const winner = determineWinner(this.state.squares);\n    // if (this.state.isGameOver) {\n    //   alert(\"Winner: \" + winner + \"!\");\n    // }\n    // console.log(\"winner: \" + winner);\n\n    console.log(\"squares: \" + this.state.squares);\n  }\n\n  handleClick(event) {\n    //\n    const className = event.target.className;\n    const i = className.slice(className.indexOf(\"squareID-\") + 9);\n    //\n    const squares = this.state.squares.slice();\n    /* determine if the square was already filled */\n    if (this.state.isGameOver) {\n      alert(\"Game over\");\n    } else if (squares[i] === null) {\n      /* determine who is next */\n      squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n      // console.log(determineWinner(squares));\n      this.setState({\n        squares,\n        xIsNext: !this.state.xIsNext,\n        isGameOver: determineWinner(squares)\n      });\n    } else {\n      alert(\"this spot was filled already\");\n    }\n    console.log(\"GameOver?: \" + Boolean(this.state.isGameOver));\n  }\n\n  renderSquare(i) {\n    return (\n      <Square\n        squareId={i}\n        value={this.state.squares[i]}\n        // onClick={this.handleClick}\n        // onClick={() => {\n        //   this.handleClick(i);\n        // }} // every time\n        onClick={this.handleClick}\n      />\n    );\n  }\n\n  render() {\n    const next = this.state.xIsNext ? \"X\" : \"O\";\n    let status = \"Next player: \" + next;\n    // check if there is a winner, if so change status\n    const result = determineWinner(this.state.squares);\n    if (result) {\n      status = \"Winner: \" + result;\n    }\n\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        {[0, 1, 2].map((d, index) => {\n          return (\n            <div className=\"board-row\" key={index}>\n              {this.renderSquare(index * 3)}\n              {this.renderSquare(index * 3 + 1)}\n              {this.renderSquare(index * 3 + 2)}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nclass Game extends Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n/* determine winner */\nfunction determineWinner(squares) {\n  const winMatrix = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  // get X's array\n  const xArray = [];\n  squares.map((value, index) => {\n    if (value === \"X\") {\n      xArray.push(index);\n    }\n    return 0;\n  });\n  // console.log(\"xArray: \" + xArray);\n  /* get O's array */\n  const oArray = [];\n  squares.map((value, index) => {\n    if (value === \"O\") {\n      oArray.push(index);\n    }\n    return 0;\n  });\n  // console.log(\"oArray: \" + oArray);\n  /* determine if X wins */\n  const resultX = winMatrix.find(subArray => {\n    return subArray.every(i => {\n      return xArray.includes(i);\n    });\n  });\n  if (resultX) {\n    // alert(\"X win! \" + resultX);\n    return \"X\";\n  }\n  // determine if O wins\n  const resultO = winMatrix.find(subArray => {\n    return subArray.every(i => {\n      return oArray.includes(i);\n    });\n  });\n  if (resultO) {\n    // alert(\"X win! \" + resultX);\n    return \"O\";\n  }\n  return null;\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}