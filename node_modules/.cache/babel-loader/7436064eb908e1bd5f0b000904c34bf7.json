{"ast":null,"code":"import _classCallCheck from \"/Users/Jun/Documents/FE/tic-tac-toe/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Jun/Documents/FE/tic-tac-toe/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Jun/Documents/FE/tic-tac-toe/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Jun/Documents/FE/tic-tac-toe/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Jun/Documents/FE/tic-tac-toe/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Jun/Documents/FE/tic-tac-toe/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Jun/Documents/FE/tic-tac-toe/tic-tac-toe/src/game.js\";\nimport React, { Component } from \"react\";\nimport determineWinner from \"./determineWinner\";\nimport Board from \"./board\";\n\nvar Game =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Game, _Component);\n\n  function Game(props) {\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n    _this.state = {\n      history: [Array(9).fill(null), [null, null, null, null, null, null, null, null, \"X\"], [null, null, null, null, null, \"O\", null, null, \"X\"]],\n      stepNumber: 2,\n      xIsNext: true,\n      isGameOver: false\n    };\n    /* bind functions that mutate the state */\n\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this))); //this function is modifying the state\n\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"renderHistory\",\n    value: function renderHistory(historyArray) {\n      return historyArray.map(function (value, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, \"Go to move #$\", index));\n      });\n    }\n  }, {\n    key: \"addSquare\",\n    value: function addSquare(newSquare) {\n      var newHistory = this.state.history.slice();\n      newHistory.push(newSquare); // console.log(\"newSquare\", newSquare);\n      // console.log(\"newHistory: \", newHistory);\n      // debugger;\n\n      this.setState({\n        history: newHistory\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(event) {\n      /* get square id from className from event.target */\n      var className = event.target.className;\n      var i = className.slice(className.indexOf(\"squareID-\") + 9);\n      /* get squares */\n\n      var squares = this.state.history[this.state.stepNumber].slice();\n      /* determine if the square was already filled */\n\n      if (this.state.isGameOver) {\n        alert(\"Game over\");\n      } else if (squares[i] === null) {\n        /* determine who is next */\n        squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n        /* determine who is the winner if there is one */\n\n        var winner = determineWinner(squares); //   /* test */\n        //   console.log(squares[i]);\n        //   console.log(winner);\n        //   debugger;\n\n        /* new history state */\n\n        var newHistory = this.state.history.slice();\n        newHistory.push(squares);\n        this.setState({\n          history: newHistory,\n          stepNumber: this.state.stepNumber + 1,\n          xIsNext: !this.state.xIsNext,\n          isGameOver: Boolean(winner)\n        });\n      } else {\n        alert(\"this spot was filled already\");\n      }\n    }\n  }, {\n    key: \"jumpBack\",\n    value: function jumpBack() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var squareToRender = this.state.history[this.state.history.length - 1];\n      return React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Board, {\n        squareToRender: squareToRender,\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"game-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"history\"), React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, this.renderHistory(this.state.history))));\n    }\n  }]);\n\n  return Game;\n}(Component);\n\nexport { Game as default };","map":{"version":3,"sources":["/Users/Jun/Documents/FE/tic-tac-toe/tic-tac-toe/src/game.js"],"names":["React","Component","determineWinner","Board","Game","props","state","history","Array","fill","stepNumber","xIsNext","isGameOver","handleClick","bind","historyArray","map","value","index","newSquare","newHistory","slice","push","setState","event","className","target","i","indexOf","squares","alert","winner","Boolean","squareToRender","length","renderHistory"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport determineWinner from \"./determineWinner\";\nimport Board from \"./board\";\n\nexport default class Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [\n        Array(9).fill(null),\n        [null, null, null, null, null, null, null, null, \"X\"],\n        [null, null, null, null, null, \"O\", null, null, \"X\"]\n      ],\n      stepNumber: 2,\n      xIsNext: true,\n      isGameOver: false\n    };\n\n    /* bind functions that mutate the state */\n    this.handleClick = this.handleClick.bind(this); //this function is modifying the state\n  }\n\n  renderHistory(historyArray) {\n    return historyArray.map((value, index) => {\n      return (\n        <li key={index}>\n          <button>\n            Go to move #$\n            {index}\n          </button>\n        </li>\n      );\n    });\n  }\n\n  addSquare(newSquare) {\n    const newHistory = this.state.history.slice();\n    newHistory.push(newSquare);\n    // console.log(\"newSquare\", newSquare);\n    // console.log(\"newHistory: \", newHistory);\n    // debugger;\n    this.setState({ history: newHistory });\n  }\n\n  handleClick(event) {\n    /* get square id from className from event.target */\n    const className = event.target.className;\n    const i = className.slice(className.indexOf(\"squareID-\") + 9);\n    /* get squares */\n    const squares = this.state.history[this.state.stepNumber].slice();\n\n    /* determine if the square was already filled */\n    if (this.state.isGameOver) {\n      alert(\"Game over\");\n    } else if (squares[i] === null) {\n      /* determine who is next */\n      squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n      /* determine who is the winner if there is one */\n      const winner = determineWinner(squares);\n\n      //   /* test */\n      //   console.log(squares[i]);\n      //   console.log(winner);\n      //   debugger;\n\n      /* new history state */\n      const newHistory = this.state.history.slice();\n      newHistory.push(squares);\n\n      this.setState({\n        history: newHistory,\n        stepNumber: this.state.stepNumber + 1,\n        xIsNext: !this.state.xIsNext,\n        isGameOver: Boolean(winner)\n      });\n    } else {\n      alert(\"this spot was filled already\");\n    }\n  }\n\n  jumpBack() {}\n\n  render() {\n    const squareToRender = this.state.history[this.state.history.length - 1];\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board squareToRender={squareToRender} onClick={this.handleClick} />\n        </div>\n        <div className=\"game-info\">\n          <div>history</div>\n          <ol>{this.renderHistory(this.state.history)}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}