{"ast":null,"code":"import _assertThisInitialized from \"/Users/Jun/Documents/FE/tic-tac-toe/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"/Users/Jun/Documents/FE/tic-tac-toe/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Jun/Documents/FE/tic-tac-toe/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Jun/Documents/FE/tic-tac-toe/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Jun/Documents/FE/tic-tac-toe/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Jun/Documents/FE/tic-tac-toe/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Jun/Documents/FE/tic-tac-toe/tic-tac-toe/src/index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nvar Square =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Square, _Component);\n\n  function Square() {\n    _classCallCheck(this, Square);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Square).apply(this, arguments));\n  }\n\n  _createClass(Square, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"button\", {\n        className: \"square squareID-\" + this.props.squareId // onClick={() => {\n        //   this.props.onClick();\n        // }}\n        ,\n        onClick: this.props.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, this.props.value);\n    }\n  }]);\n\n  return Square;\n}(Component); // function Square(props) {\n//   return (\n//     <button className=\"square\" onClick={props.onClick}>\n//       {props.value}\n//     </button>\n//   );\n// }\n\n\nvar Board =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Board, _Component2);\n\n  function Board(props) {\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n    _this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true,\n      isGameOver: false\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this))); //this function is modifying the state\n\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"handleClick\",\n    value: function handleClick(event) {\n      //\n      var className = event.target.className;\n      var i = className.slice(className.indexOf(\"squareID-\") + 9); //\n\n      var squares = this.state.squares.slice();\n      /* determine if the square was already filled */\n\n      if (this.state.isGameOver) {\n        alert(\"Game over\");\n      } else if (squares[i] === null) {\n        /* determine who is next */\n        squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n        /* determine who is the winner if there is one */\n\n        var winner = determineWinner(squares);\n        this.setState({\n          squares: squares,\n          xIsNext: !this.state.xIsNext,\n          isGameOver: Boolean(winner)\n        });\n      } else {\n        alert(\"this spot was filled already\");\n      } // console.log(\"state squares: \" + this.state.squares);\n\n\n      console.log(\"current squares: \" + squares); // // console.log(\"GameOver?: \" + Boolean());\n    }\n  }, {\n    key: \"renderSquare\",\n    value: function renderSquare(i) {\n      return React.createElement(Square, {\n        squareId: i,\n        value: this.state.squares[i] // onClick={this.handleClick}\n        // onClick={() => {\n        //   this.handleClick(i);\n        // }} // every time\n        ,\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var next = this.state.xIsNext ? \"X\" : \"O\";\n      var status = \"Next player: \" + next; // check if there is a winner, if so change status\n\n      var result = determineWinner(this.state.squares);\n\n      if (result) {\n        status = \"Winner: \" + result;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, status), [0, 1, 2].map(function (d, index) {\n        return React.createElement(\"div\", {\n          className: \"board-row\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, _this2.renderSquare(index * 3), _this2.renderSquare(index * 3 + 1), _this2.renderSquare(index * 3 + 2));\n      }), this.state.isGameOver && React.createElement(\"div\", {\n        className: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Game Over!!!\"));\n    }\n  }]);\n\n  return Board;\n}(Component);\n\nvar Game =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(Game, _Component3);\n\n  function Game(props) {\n    var _this3;\n\n    _classCallCheck(this, Game);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n    _this3.state = {\n      history: [Array(9).fill(null), [,,,,,,,, \"X\"], [,,,,, \"O\",,, \"X\"]]\n    };\n    return _this3;\n  }\n\n  _createClass(Game, [{\n    key: \"renderHistory\",\n    value: function renderHistory(historyArray) {\n      return historyArray.map(function (value, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, \"Go to move #$\", index));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Board, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"game-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"history\"), React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, this.renderHistory(this.state.history))));\n    }\n  }]);\n\n  return Game;\n}(Component);\n/* determine winner */\n\n\nfunction determineWinner(squares) {\n  var winMatrix = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]]; // get X's array\n\n  var xArray = [];\n  squares.map(function (value, index) {\n    if (value === \"X\") {\n      xArray.push(index);\n    }\n\n    return 0;\n  }); // console.log(\"xArray: \" + xArray);\n\n  /* get O's array */\n\n  var oArray = [];\n  squares.map(function (value, index) {\n    if (value === \"O\") {\n      oArray.push(index);\n    }\n\n    return 0;\n  }); // console.log(\"oArray: \" + oArray);\n\n  /* determine if X wins */\n\n  var resultX = winMatrix.find(function (subArray) {\n    return subArray.every(function (i) {\n      return xArray.includes(i);\n    });\n  });\n\n  if (resultX) {\n    // alert(\"X win! \" + resultX);\n    return \"X\";\n  } // determine if O wins\n\n\n  var resultO = winMatrix.find(function (subArray) {\n    return subArray.every(function (i) {\n      return oArray.includes(i);\n    });\n  });\n\n  if (resultO) {\n    // alert(\"X win! \" + resultX);\n    return \"O\";\n  }\n\n  return null;\n} // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 204\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/Jun/Documents/FE/tic-tac-toe/tic-tac-toe/src/index.js"],"names":["React","Component","ReactDOM","Square","props","squareId","onClick","value","Board","state","squares","Array","fill","xIsNext","isGameOver","handleClick","bind","event","className","target","i","slice","indexOf","alert","winner","determineWinner","setState","Boolean","console","log","next","status","result","map","d","index","renderSquare","Game","history","historyArray","renderHistory","winMatrix","xArray","push","oArray","resultX","find","subArray","every","includes","resultO","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nclass Square extends Component {\n  render() {\n    return (\n      <button\n        className={\"square squareID-\" + this.props.squareId}\n        // onClick={() => {\n        //   this.props.onClick();\n        // }}\n        onClick={this.props.onClick}\n      >\n        {this.props.value}\n      </button>\n    );\n  }\n}\n\n// function Square(props) {\n//   return (\n//     <button className=\"square\" onClick={props.onClick}>\n//       {props.value}\n//     </button>\n//   );\n// }\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true,\n      isGameOver: false\n    };\n    this.handleClick = this.handleClick.bind(this); //this function is modifying the state\n  }\n\n  handleClick(event) {\n    //\n    const className = event.target.className;\n    const i = className.slice(className.indexOf(\"squareID-\") + 9);\n    //\n    const squares = this.state.squares.slice();\n    /* determine if the square was already filled */\n    if (this.state.isGameOver) {\n      alert(\"Game over\");\n    } else if (squares[i] === null) {\n      /* determine who is next */\n      squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n      /* determine who is the winner if there is one */\n      const winner = determineWinner(squares);\n\n      this.setState({\n        squares,\n        xIsNext: !this.state.xIsNext,\n        isGameOver: Boolean(winner)\n      });\n    } else {\n      alert(\"this spot was filled already\");\n    }\n    // console.log(\"state squares: \" + this.state.squares);\n    console.log(\"current squares: \" + squares);\n    // // console.log(\"GameOver?: \" + Boolean());\n  }\n\n  renderSquare(i) {\n    return (\n      <Square\n        squareId={i}\n        value={this.state.squares[i]}\n        // onClick={this.handleClick}\n        // onClick={() => {\n        //   this.handleClick(i);\n        // }} // every time\n        onClick={this.handleClick}\n      />\n    );\n  }\n\n  render() {\n    const next = this.state.xIsNext ? \"X\" : \"O\";\n    let status = \"Next player: \" + next;\n    // check if there is a winner, if so change status\n    const result = determineWinner(this.state.squares);\n    if (result) {\n      status = \"Winner: \" + result;\n    }\n\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        {[0, 1, 2].map((d, index) => {\n          return (\n            <div className=\"board-row\" key={index}>\n              {this.renderSquare(index * 3)}\n              {this.renderSquare(index * 3 + 1)}\n              {this.renderSquare(index * 3 + 2)}\n            </div>\n          );\n        })}\n        {this.state.isGameOver && <div className=\"alert\">Game Over!!!</div>}\n      </div>\n    );\n  }\n}\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [\n        Array(9).fill(null),\n        [, , , , , , , , \"X\"],\n        [, , , , , \"O\", , , \"X\"]\n      ]\n    };\n  }\n\n  renderHistory(historyArray) {\n    return historyArray.map((value, index) => {\n      return (\n        <li key={index}>\n          <button>\n            Go to move #$\n            {index}\n          </button>\n        </li>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n        <div className=\"game-info\">\n          <div>history</div>\n          <ol>{this.renderHistory(this.state.history)}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n/* determine winner */\nfunction determineWinner(squares) {\n  const winMatrix = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  // get X's array\n  const xArray = [];\n  squares.map((value, index) => {\n    if (value === \"X\") {\n      xArray.push(index);\n    }\n    return 0;\n  });\n  // console.log(\"xArray: \" + xArray);\n  /* get O's array */\n  const oArray = [];\n  squares.map((value, index) => {\n    if (value === \"O\") {\n      oArray.push(index);\n    }\n    return 0;\n  });\n  // console.log(\"oArray: \" + oArray);\n  /* determine if X wins */\n  const resultX = winMatrix.find(subArray => {\n    return subArray.every(i => {\n      return xArray.includes(i);\n    });\n  });\n  if (resultX) {\n    // alert(\"X win! \" + resultX);\n    return \"X\";\n  }\n  // determine if O wins\n  const resultO = winMatrix.find(subArray => {\n    return subArray.every(i => {\n      return oArray.includes(i);\n    });\n  });\n  if (resultO) {\n    // alert(\"X win! \" + resultX);\n    return \"O\";\n  }\n  return null;\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}